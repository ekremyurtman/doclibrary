{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekrem.yurtman\\\\source\\\\repos\\\\DocLibrary\\\\DocLibrary.WebApp\\\\ClientApp\\\\src\\\\components\\\\Documents.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Documents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      documents: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.populateDocumentsData();\n  }\n\n  async Preview(doc) {// TODO\n  }\n\n  async Share(doc) {// TODO\n  }\n\n  static renderDocumentsTable(documents) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Extension\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Upload Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: documents.map(document => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: document.documentName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: document.documentTypeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: document.documentExtensionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: document.uploadTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-default\",\n              onClick: () => {\n                Preview(document);\n              },\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-default\",\n              onClick: () => {\n                Share(document);\n              },\n              children: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, document.documentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : Documents.renderDocumentsTable(this.state.documents);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"tabelLabel\",\n        children: \"Document List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), contents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n  async populateDocumentsData() {\n    const response = await fetch('document/getdocumentlist');\n    const data = await response.json();\n    this.setState({\n      documents: data,\n      loading: false\n    });\n  }\n\n}\nDocuments.displayName = Documents.name;","map":{"version":3,"sources":["C:/Users/ekrem.yurtman/source/repos/DocLibrary/DocLibrary.WebApp/ClientApp/src/components/Documents.js"],"names":["React","Component","Documents","constructor","props","state","documents","loading","componentDidMount","populateDocumentsData","Preview","doc","Share","renderDocumentsTable","map","document","documentName","documentTypeName","documentExtensionName","uploadTime","documentId","render","contents","response","fetch","data","json","setState","displayName","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Documents extends Component {\r\n    static displayName = Documents.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { documents: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateDocumentsData();\r\n  }\r\n\r\n    async Preview(doc) {\r\n        // TODO\r\n    }\r\n\r\n    async Share(doc) {\r\n        // TODO\r\n    }\r\n\r\n    static renderDocumentsTable(documents) {\r\n        return (\r\n            <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Extension</th>\r\n                        <th>Upload Time</th>\r\n                        <th colSpan=\"2\">#</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {documents.map(document =>\r\n                        <tr key={document.documentId}>\r\n                            <td>{document.documentName}</td>\r\n                            <td>{document.documentTypeName}</td>\r\n                            <td>{document.documentExtensionName}</td>\r\n                            <td>{document.uploadTime}</td>\r\n                            <td><button type=\"button\" className=\"btn btn-default\" onClick={() => { Preview(document)}}>Preview</button></td>\r\n                            <td><button type=\"button\" className=\"btn btn-default\" onClick={() => { Share(document) }}>Share</button></td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n        : Documents.renderDocumentsTable(this.state.documents);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Document List</h1>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateDocumentsData() {\r\n      const response = await fetch('document/getdocumentlist');\r\n      const data = await response.json();\r\n      this.setState({ documents: data, loading: false });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}