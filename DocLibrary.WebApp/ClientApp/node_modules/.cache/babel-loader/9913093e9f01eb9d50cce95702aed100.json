{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekrem.yurtman\\\\source\\\\repos\\\\DocLibrary\\\\DocLibrary.WebApp\\\\ClientApp\\\\src\\\\components\\\\AddDocument.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddDocument extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.fileSubmitHandler = event => {\n      event.preventDefault();\n      const formData = new FormData();\n\n      for (let i = 0; i < files.length; i++) {\n        formData.append('files', files[i]);\n      }\n\n      const requestOptions = {\n        method: 'POST',\n        body: formData\n      };\n      fetch('document/upload', requestOptions).then(async response => {\n        var _response$headers$get;\n\n        const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n        const data = isJson && (await response.json()); // check for error response\n\n        if (!response.ok) {\n          // get error message\n          const error = data && data.message || response.status;\n          return Promise.reject(error);\n        }\n\n        alert(data.message);\n      }).catch(error => {\n        console.error('Error while uploading file!', error);\n        alert('ERROR!');\n      });\n    };\n  }\n\n  uploadFileHandler(event) {\n    this.setState({\n      file: event.target.files\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fileSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: uploadFileHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nAddDocument.displayName = AddDocument.name;","map":{"version":3,"sources":["C:/Users/ekrem.yurtman/source/repos/DocLibrary/DocLibrary.WebApp/ClientApp/src/components/AddDocument.js"],"names":["React","Component","AddDocument","fileSubmitHandler","event","preventDefault","formData","FormData","i","files","length","append","requestOptions","method","body","fetch","then","response","isJson","headers","get","includes","data","json","ok","error","message","status","Promise","reject","alert","catch","console","uploadFileHandler","setState","file","target","render","displayName","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAOvCE,iBAPuC,GAOlBC,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,KAAK,CAACC,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACnCF,QAAAA,QAAQ,CAACK,MAAT,CAAgB,OAAhB,EAAyBF,KAAK,CAACD,CAAD,CAA9B;AACH;;AAED,YAAMI,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,IAAI,EAAER;AAFa,OAAvB;AAIAS,MAAAA,KAAK,CAAC,iBAAD,EAAoBH,cAApB,CAAL,CACKI,IADL,CACU,MAAMC,QAAN,IAAkB;AAAA;;AACpB,cAAMC,MAAM,4BAAGD,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAH,0DAAG,sBAAsCC,QAAtC,CAA+C,kBAA/C,CAAf;AACA,cAAMC,IAAI,GAAGJ,MAAM,KAAI,MAAMD,QAAQ,CAACM,IAAT,EAAV,CAAnB,CAFoB,CAIpB;;AACA,YAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AACd;AACA,gBAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BT,QAAQ,CAACU,MAAjD;AACA,iBAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAEDK,QAAAA,KAAK,CAACR,IAAI,CAACI,OAAN,CAAL;AACH,OAbL,EAcKK,KAdL,CAcWN,KAAK,IAAI;AACZO,QAAAA,OAAO,CAACP,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACAK,QAAAA,KAAK,CAAC,QAAD,CAAL;AACH,OAjBL;AAkBH,KAtCsC;AAAA;;AAGvCG,EAAAA,iBAAiB,CAAC7B,KAAD,EAAQ;AACrB,SAAK8B,QAAL,CAAc;AAAEC,MAAAA,IAAI,EAAE/B,KAAK,CAACgC,MAAN,CAAa3B;AAArB,KAAd;AACH;;AAmCD4B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAElC,iBAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,QAAQ,EAAE8B;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA/CsC;AAA9B/B,W,CACFoC,W,GAAcpC,WAAW,CAACqC,I","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class AddDocument extends Component {\r\n    static displayName = AddDocument.name;\r\n\r\n    uploadFileHandler(event) {\r\n        this.setState({ file: event.target.files })\r\n    }\r\n\r\n    fileSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData();\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            formData.append('files', files[i])\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: formData\r\n        };\r\n        fetch('document/upload', requestOptions)\r\n            .then(async response => {\r\n                const isJson = response.headers.get('content-type')?.includes('application/json');\r\n                const data = isJson && await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n\r\n                alert(data.message);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error while uploading file!', error);\r\n                alert('ERROR!');\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={fileSubmitHandler}>\r\n                <input type=\"file\" multiple onChange={uploadFileHandler} />\r\n                <button type='submit'>Upload</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}